services:
  db:
    image: postgres:16
    container_name: task-share-db
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - "${DATABASE_PORT}:${DATABASE_PORT}"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test:
        ["CMD-SHELL", "pg_isready -U ${DATABASE_USERNAME} -d ${DATABASE_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    
    container_name: task-share-api
    env_file:
      - .env
    ports:
      - "3001:3001"
    depends_on:
      - db
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./.env:/app/.env
    command: sh -c "npm install
     && npx typeorm-ts-node-commonjs migration:run -d src/infra/database/data-source.ts
     && npm run dev"
    
  spa:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: task-share-spa
    depends_on:
      - api
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: sh -c "npm install && npm run dev"

volumes:
  pgdata:
